//using hashmap single pass
public int[] twoSum(int[] nums, int target) {
       HashMap<Integer,Integer> hm = new HashMap<>();

       for(int i=0;i<nums.length;i++){
        int required = target - nums[i];

        if(hm.containsKey(required)){
            return new int[]{hm.get(required),i};
        }
        hm.put(nums[i],i);
       }
        return new int[]{-1,-1};

    }

//hashmap 2 pass
public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> s = new HashMap<>();

        for(int i=0;i<nums.length;i++){
            s.put(nums[i],i);
        }

        for(int i=0;i<nums.length;i++){
            int required = target - nums[i];
            if(s.containsKey(required)){
                if(s.get(required) != i){
                    return new int[]{i,s.get(required)};
                }
                
            }
        }
        return new int[]{-1,-1};
    }

