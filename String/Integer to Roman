//using simple while loop - simulation
class Solution {
    public String intToRoman(int num) {
        StringBuilder ans = new StringBuilder("");

        while(num > 0){
            if(num >= 1000){
                ans.append("M");
                num -= 1000;
            }else if(num < 1000 && num >= 900){
                ans.append("CM");
                num -= 900;
            }else if(num >= 500){
                ans.append("D");
                num -= 500;
            }else if(num < 500 && num >= 400){
                ans.append("CD");
                num -= 400;
            }else if(num >= 100){
                ans.append("C");
                num -= 100;
            }else if(num < 100 && num >= 90){
                ans.append("XC");
                num -= 90;
            }else if(num >= 50){
                ans.append("L");
                num -= 50;
            }else if(num < 50 && num >= 40){
                ans.append("XL");
                num -= 40;
            }
            else if(num >= 10){
                ans.append("X");
                num -= 10;
            }else if(num < 10 && num >= 9){
                ans.append("IX");
                num -= 9;
            }else if(num >= 5){
                ans.append("V");
                num -= 5;
            }else if(num == 4){
                ans.append("IV");
                num -= 4;
            }else{
                ans.append("I");
                num -= 1;
            }
        }
        return ans.toString();
    }
}

//using arrays 
 public String intToRoman(int num) {
        int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
        String[] romanNumerals = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        StringBuilder sb = new StringBuilder();
        int i = 0;
        while (num > 0) {
            if (num >= values[i]) {
                sb.append(romanNumerals[i]);
                num -= values[i];
            } else {
                i++;
            }
        }

        return sb.toString();
    }
